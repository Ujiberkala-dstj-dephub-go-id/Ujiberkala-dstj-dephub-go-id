{"version":3,"sources":["cjs/index.js"],"names":["EVENT_KEY","EventName","HIDE","SHOW","ClassName","Selector","OcDefault","createDrawer","hideByEsc","getSelectorFromElement","element","selector","getAttribute","document","querySelectorAll","length","error","Error","OnoffCanvas","options","_this","this","querySelector","config","Object","assign","triggerElements","id","addAriaExpanded","_iterator2","slice","call","_isArray2","Array","isArray","_i2","Symbol","iterator","_ref2","next","done","value","addEventListener","event","currentTarget","tagName","preventDefault","toggle","drawer","createElement","classList","add","documentElement","appendChild","autoinit","ocNodeList","selectorArr","arrs","divArr","_iterator","_isArray","_i","_ref","push","selectorArray","filter","elem","index","self","indexOf","newOnoffcanvas","_proto","prototype","listen","handle","emit","evtType","target","shouldBubble","evt","CustomEvent","bubbles","createEvent","initCustomEvent","dispatchEvent","on","contains","hide","show","_this2","bind","window","keyCode","remove","removeEventListener","isOpen","forEach","el","i","setAttribute"],"mappings":"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","sourcesContent":["/*!\n* onoffcanvas - v2.2.1\n* An offcanvas plugin\n* https://github.com/onokumus/onoffcanvas#readme\n*\n* Made by onokumus <onokumus@gmail.com> (https://github.com/onokumus)\n* Under MIT License\n*/\n'use strict';\n\nvar NAME = \"onoffcanvas\";\nvar EVENT_KEY = \".\" + NAME;\nvar EventName = {\n  HIDE: \"hide\" + EVENT_KEY,\n  SHOW: \"show\" + EVENT_KEY\n};\nvar ClassName = {\n  SHOW: \"is-open\"\n};\nvar Selector = {\n  DATA_TOGGLE: '[data-toggle=\"onoffcanvas\"]'\n};\nvar OcDefault = {\n  createDrawer: true,\n  hideByEsc: true\n};\n\nfunction getSelectorFromElement(element) {\n  var selector = element.getAttribute(\"data-target\");\n\n  if (!selector || selector === \"#\") {\n    selector = element.getAttribute(\"href\") || \"\";\n  }\n\n  try {\n    var $selector = document.querySelectorAll(selector);\n    return $selector.length > 0 ? selector : null;\n  } catch (error) {\n    throw new Error(\"Target Not Found!\");\n  }\n}\nfunction uniqueArr(arr) {\n  var uniqueArray = arr.filter(function (elem, index, self) {\n    return index === self.indexOf(elem);\n  });\n  return uniqueArray;\n}\nfunction selectorArray(arrs) {\n  var divArr = [];\n\n  for (var _iterator = arrs, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var element = _ref;\n    var selector = getSelectorFromElement(element);\n    divArr.push(selector);\n  }\n\n  return divArr;\n}\n\n/**\n *\n * @export\n * @class OnoffCanvas\n * @extends {EventEmitter}\n */\n\nvar OnoffCanvas =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Auto init all OnoffCanvas elements\n   *\n   * @static\n   * @param {boolean} [escKey]\n   * @memberof OnoffCanvas\n   */\n  OnoffCanvas.autoinit = function autoinit(options) {\n    if (options === void 0) {\n      options = OcDefault;\n    }\n\n    var ocNodeList = document.querySelectorAll(\"\" + Selector.DATA_TOGGLE);\n    var ocListArr = [].slice.call(ocNodeList);\n    var selectorArr = selectorArray(ocListArr);\n    var newOcArr = uniqueArr(selectorArr);\n\n    for (var _iterator = newOcArr, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var element = _ref;\n      newOnoffCanvas(element, options);\n    }\n  };\n  /**\n   * Creates an instance of OnoffCanvas.\n   *\n   * @constructor\n   * @param {HTMLElement} _element\n   * @param {IOCDefault} [options]\n   * @memberof OnoffCanvas\n   */\n\n\n  function OnoffCanvas(element, options) {\n    var _this = this;\n\n    this.element = typeof element === \"string\" ? document.querySelector(element) : element;\n    this.config = Object.assign({}, OcDefault, options);\n    this.triggerElements = document.querySelectorAll(Selector.DATA_TOGGLE + \"[href=\\\"#\" + this.element.id + \"\\\"],\\n      \" + Selector.DATA_TOGGLE + \"[data-target=\\\"#\" + this.element.id + \"\\\"]\");\n    this.addAriaExpanded(this.triggerElements);\n    var triggers = [].slice.call(this.triggerElements);\n\n    for (var _iterator2 = triggers, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var trigger = _ref2;\n      trigger.addEventListener(\"click\", function (event) {\n        if (event.currentTarget.tagName === \"A\") {\n          event.preventDefault();\n        }\n\n        _this.toggle();\n      });\n    }\n\n    this.drawer = document.createElement(\"div\");\n    this.drawer.classList.add(\"onoffcanvas-drawer\");\n    document.documentElement.appendChild(this.drawer);\n  }\n\n  var _proto = OnoffCanvas.prototype;\n\n  _proto.listen = function listen(event, handle) {\n    this.element.addEventListener(event, handle, false);\n    return this;\n  };\n\n  _proto.emit = function emit(evtType, target, shouldBubble) {\n    if (shouldBubble === void 0) {\n      shouldBubble = false;\n    }\n\n    var evt;\n\n    if (typeof CustomEvent === \"function\") {\n      evt = new CustomEvent(evtType, {\n        bubbles: shouldBubble\n      });\n    } else {\n      evt = document.createEvent(\"CustomEvent\");\n      evt.initCustomEvent(evtType, shouldBubble, false);\n    }\n\n    this.element.dispatchEvent(evt);\n    return this;\n  };\n\n  _proto.on = function on(event, handle) {\n    this.listen(event, handle);\n    return this;\n  };\n  /**\n   * Show/Hide OnoffCanvas element\n   *\n   * @returns {void}\n   * @memberof OnoffCanvas\n   */\n\n\n  _proto.toggle = function toggle() {\n    if (this.element.classList.contains(ClassName.SHOW)) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n  /**\n   * Show OnoffCanvas element\n   *\n   * @returns {void}\n   * @memberof OnoffCanvas\n   */\n\n\n  _proto.show = function show() {\n    var _this2 = this;\n\n    if (this.element.classList.contains(ClassName.SHOW)) {\n      return;\n    }\n\n    this.element.classList.add(ClassName.SHOW);\n    this.addAriaExpanded(this.triggerElements);\n    this.emit(EventName.SHOW, this.element);\n\n    if (this.config.createDrawer) {\n      this.drawer.classList.add(\"is-open\");\n      this.drawer.addEventListener(\"click\", this.hide.bind(this));\n    }\n\n    if (this.config.hideByEsc) {\n      window.addEventListener(\"keydown\", function (event) {\n        if (event.keyCode === 27) {\n          _this2.hide();\n        }\n      });\n    }\n  };\n  /**\n   * Hide OnoffCanvas element\n   *\n   * @returns {void}\n   * @memberof OnoffCanvas\n   */\n\n\n  _proto.hide = function hide() {\n    if (!this.element.classList.contains(ClassName.SHOW)) {\n      return;\n    }\n\n    if (this.config.createDrawer) {\n      this.drawer.classList.remove(\"is-open\");\n      this.drawer.removeEventListener(\"click\", this.hide.bind(this));\n    }\n\n    this.element.classList.remove(ClassName.SHOW);\n    this.addAriaExpanded(this.triggerElements);\n    this.emit(EventName.HIDE, this.element);\n  };\n\n  _proto.addAriaExpanded = function addAriaExpanded(triggerElements) {\n    var isOpen = this.element.classList.contains(ClassName.SHOW);\n    Array.prototype.forEach.call(triggerElements, function (el, i) {\n      el.setAttribute(\"aria-expanded\", isOpen ? \"true\" : \"false\");\n    });\n  };\n\n  return OnoffCanvas;\n}();\n\nfunction newOnoffCanvas(element, options) {\n  var newOnoffcanvas = new OnoffCanvas(document.querySelector(element), options);\n}\n\nmodule.exports = OnoffCanvas;\n"]}